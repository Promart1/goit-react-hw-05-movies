{"version":3,"file":"static/js/457.943a07d6.chunk.js","mappings":"sPACA,EAA4B,2BAA5B,EAAiE,yB,SC+CjE,EA3CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAgBJ,GAFlB,OAEXK,EAFW,OAGjBN,EAAWM,EAAKC,SAHC,gDAKjBC,QAAQC,MAAM,0BAAd,MALiB,yDAAH,qDASlBL,GACD,GAAE,CAACH,IAECF,GAIH,iBAAKW,UAAWC,EAAhB,WACE,wBACsB,IAAnBZ,EAAQa,QACP,yBACE,cAAGF,UAAWC,EAAd,yDAKFZ,EAAQc,KAAI,SAAAC,GAAM,OAChB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADA,OAQtB,SAAC,KAAD,QApBK,6CAuBV,C,+LC5CKC,EAAW,gCACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHuB,cACnBO,EADmB,OAKnBpB,EAAOoB,EAASpB,KALG,kBAMlBA,GANkB,2CAAH,qDASXqB,EAAe,mCAAG,WAAM1B,GAAN,yFACNwB,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BjB,GAAWkB,GADnC,cACvBO,EADuB,OAEvBpB,EAAOoB,EAASpB,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfsB,EAAY,mCAAG,WAAM3B,GAAN,yFACHwB,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDjB,EADC,YAErBkB,GAHwB,cACpBO,EADoB,OAKpBpB,EAAOoB,EAASpB,KALI,kBAMnBA,GANmB,2CAAH,sDASZD,EAAe,mCAAG,WAAMJ,GAAN,yFACNwB,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDjB,EADC,YAErBkB,GAH2B,cACvBO,EADuB,OAKvBpB,EAAOoB,EAASpB,KALO,kBAMtBA,GANsB,2CAAH,sDASfuB,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYY,EADZ,WAErBX,GAH2B,cACvBO,EADuB,OAKvBpB,EAAOoB,EAASpB,KALO,kBAMtBA,GANsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\",\"message\":\"Reviews_message__u2VJu\"};","import { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchApi';\nimport css from '../Reviews/Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        console.error('Error searching actors:', error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return <p>Loading reviews...</p>;\n  }\n  return (\n    <div className={css.container}>\n      <ul>\n        {reviews.length === 0 ? (\n          <li>\n            <p className={css.message}>\n              We do not have any reviews for this movie\n            </p>\n          </li>\n        ) : (\n          reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZDhiMzA3Yjc3Nzc0MWQwN2QwZTg4NTgzMzkyMWE4NCIsInN1YiI6IjY0OTcyMmRlYjM0NDA5MDBlMjcxYWNkYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-nGnsxic-Eqjb3RquRboL6o3Q58xkv1131q1IZQJtUA',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMoviesByName = async queryName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","movieReviews","getMovieReviews","data","results","console","error","className","css","length","map","review","author","content","id","BASE_URL","options","method","headers","accept","Authorization","getTrending","axios","response","getMovieDetails","getMovieCast","getMoviesByName","queryName"],"sourceRoot":""}