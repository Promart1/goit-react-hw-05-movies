{"version":3,"file":"static/js/175.39cb6274.chunk.js","mappings":"uQACA,GAAgB,UAAY,6B,SC0B5B,EA1BkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACnB,OACE,iBAAKC,UAAWC,EAAAA,UAAhB,UACGF,EAAMG,aACL,gBACEC,IAAG,yCAAoCJ,EAAMG,aAC7CE,IAAKL,EAAMM,SAGb,gBACEF,IAAI,kEACJC,IAAI,aAGR,iBAAKJ,UAAWC,EAAAA,KAAhB,WACE,wBAAKF,EAAMM,SACX,wCAAgBN,EAAMO,iBACtB,sCACA,uBAAIP,EAAMQ,YACV,oCACA,uBAAIR,EAAMS,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAItD,ECxBD,EAA4B,kCCiB5B,EAfuB,WACrB,OACE,iBAAKZ,UAAWC,EAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMY,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,4BAKT,ECwBD,EAlCqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAc7C,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAgBV,GAFlB,OAEXW,EAFW,OAGjBR,EAASQ,GAHQ,gDAKjBC,QAAQC,MAAM,yBAAd,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACT,KAGF,iCACE,UAAC,KAAD,CAAMD,GAAIK,EAAV,WACE,SAAC,MAAD,IADF,aAICnB,IAAS,SAAC,EAAD,CAAWA,MAAOA,KAE5B,SAAC,EAAD,KACA,SAAC,EAAA6B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,+LCrCKC,EAAW,gCACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHuB,cACnBO,EADmB,OAKnBb,EAAOa,EAASb,KALG,kBAMlBA,GANkB,2CAAH,qDASXD,EAAe,mCAAG,WAAMV,GAAN,yFACNuB,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BhB,GAAWiB,GADnC,cACvBO,EADuB,OAEvBb,EAAOa,EAASb,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfc,EAAY,mCAAG,WAAMzB,GAAN,yFACHuB,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDhB,EADC,YAErBiB,GAHwB,cACpBO,EADoB,OAKpBb,EAAOa,EAASb,KALI,kBAMnBA,GANmB,2CAAH,sDASZe,EAAe,mCAAG,WAAM1B,GAAN,yFACNuB,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDhB,EADC,YAErBiB,GAH2B,cACvBO,EADuB,OAKvBb,EAAOa,EAASb,KALO,kBAMtBA,GANsB,2CAAH,sDASfgB,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYY,EADZ,WAErBX,GAH2B,cACvBO,EADuB,OAKvBb,EAAOa,EAASb,KALO,kBAMtBA,GANsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieInfo/MoveInfo.module.css?3c5f","components/MovieInfo/MovieInfo.js","webpack://react-homework-template/./src/components/AdditionalInfo/AdditionalInfo.module.css?0bf0","components/AdditionalInfo/AdditionalInfo.js","components/pages/MovieDetails.js","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoveInfo_container__GDDz8\"};","import css from '../MovieInfo/MoveInfo.module.css';\nconst MovieInfo = ({ movie }) => {\n  return (\n    <div className={css.container}>\n      {movie.poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        ></img>\n      ) : (\n        <img\n          src=\"https://www.sheringtonprimary.co.uk/wp-content/uploads/film.jpg\"\n          alt=\"Default\"\n        />\n      )}\n      <div className={css.item}>\n        <h2>{movie.title}</h2>\n        <p>User score: {movie.vote_average}</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AdditionalInfo_container__Ol9jh\"};","import { Link } from 'react-router-dom';\nimport css from '../AdditionalInfo/AdditionalInfo.module.css';\n\nconst AdditionalInfo = () => {\n  return (\n    <div className={css.container}>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default AdditionalInfo;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { getMovieDetails } from 'services/fetchApi';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { AiFillCaretLeft } from 'react-icons/ai';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.error('Error searching movie:', error);\n      }\n    };\n\n    movieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>\n        <AiFillCaretLeft />\n        go back\n      </Link>\n      {movie && <MovieInfo movie={movie} />}\n\n      <AdditionalInfo />\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZDhiMzA3Yjc3Nzc0MWQwN2QwZTg4NTgzMzkyMWE4NCIsInN1YiI6IjY0OTcyMmRlYjM0NDA5MDBlMjcxYWNkYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-nGnsxic-Eqjb3RquRboL6o3Q58xkv1131q1IZQJtUA',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMoviesByName = async queryName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["movie","className","css","poster_path","src","alt","title","vote_average","overview","genres","map","genre","name","join","to","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","movieDetails","getMovieDetails","data","console","error","Suspense","fallback","BASE_URL","options","method","headers","accept","Authorization","getTrending","axios","response","getMovieCast","getMovieReviews","getMoviesByName","queryName"],"sourceRoot":""}