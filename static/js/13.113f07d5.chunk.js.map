{"version":3,"file":"static/js/13.113f07d5.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.js","components/pages/Movies.js","services/fetchApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li\n          key={movie.id}\n          to={`/movies/:${movie.id}`}\n          state={{ from: location }}\n        >\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchMovies_input__1c5BI\",\"button\":\"SearchMovies_button__tDOhz\"};","import { useState } from 'react';\nimport css from '../SearchMovies/SearchMovies.module.css';\n\nconst SearchMovies = ({ onSubmit, value }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      return <div>Please input name for searching movies</div>;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        value={query}\n        onChange={handleChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n\n      <button className={css.button} type=\"submit\">\n        search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchMovies;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'services/fetchApi';\n\nconst Movies = () => {\n \n\n  const [movies, setMovies] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    setMovies(null);\n\n    getMoviesByName(query)\n      .then(data => {\n        if (data.results.length < 1) {\n          setMovies(null);\n\n          return <div>There are no movies with name ${query}</div>;\n        }\n        setMovies(data.results);\n      })\n      .catch(err => console.error(err));\n  }, [query]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <SearchMovies onSubmit={handleFormSubmit} />\n      \n      {movies && (\n        <MoviesList movies={movies} path=\"\" state={{ from: location }} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZDhiMzA3Yjc3Nzc0MWQwN2QwZTg4NTgzMzkyMWE4NCIsInN1YiI6IjY0OTcyMmRlYjM0NDA5MDBlMjcxYWNkYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-nGnsxic-Eqjb3RquRboL6o3Q58xkv1131q1IZQJtUA',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMoviesByName = async queryName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","onSubmit","value","useState","query","setQuery","event","preventDefault","trim","className","css","onChange","currentTarget","toLowerCase","type","autoComplete","autoFocus","placeholder","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getMoviesByName","then","data","results","length","catch","err","console","error","MoviesList","path","BASE_URL","options","method","headers","accept","Authorization","getTrending","axios","response","getMovieDetails","movieId","getMovieCast","getMovieReviews","queryName"],"sourceRoot":""}