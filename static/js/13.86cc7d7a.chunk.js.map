{"version":3,"file":"static/js/13.86cc7d7a.chunk.js","mappings":"kOACA,EAAwB,4BAAxB,EAA6D,6B,SCmC7D,EAjCqB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACtB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAcA,OACE,kBAAMH,SAPa,SAAAI,GACnBA,EAAMC,iBACNL,EAASE,GAJTC,EAAa,GAMd,EAGC,WACE,kBACEG,UAAWC,EACXC,SAhBc,SAAAJ,GAClBD,EAAaC,EAAMK,cAAcC,MAAMC,cAAcC,OACtD,EAeKC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAGd,mBAAQV,UAAWC,EAAYM,KAAK,SAApC,sBAKL,E,iBCyBD,EAtDe,WAAO,IAAD,EACnB,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAAkCjB,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAAuBgB,EAAAA,EAAAA,MACjBC,EAAS,WADf,eAC+BC,IAAI,gBAApB,QAAgC,IAW/CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAgBtB,GAFlB,OAEXuB,EAFW,OAGjBP,EAAUO,EAAKC,SAHE,gDAKjBC,QAAQC,MAAM,0BAAd,MALiB,yDAAH,qDASlBL,GACD,GAAE,CAACrB,KAEJoB,EAAAA,EAAAA,YAAU,WACR,IACMO,EADsB,IAAIC,gBAAgBC,OAAOC,SAASC,QACnBZ,IAAI,UAAY,GAC7DlB,EAAa0B,EACd,GAAE,IAMH,OACE,iCACE,SAAC,EAAD,CAAcnB,MAAOU,EAAWpB,SANnB,SAAAkC,GAEf/B,EAAa+B,EACd,KAIG,wBACGjB,EAAOkB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMF,SADjCE,EAAME,GADA,QASxB,C,+LCvDKC,EAAW,gCACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHuB,cACnBO,EADmB,OAKnBtB,EAAOsB,EAAStB,KALG,kBAMlBA,GANkB,2CAAH,qDASXuB,EAAe,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BU,GAAWT,GADnC,cACvBO,EADuB,OAEvBtB,EAAOsB,EAAStB,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfyB,EAAY,mCAAG,WAAMD,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDU,EADC,YAErBT,GAHwB,cACpBO,EADoB,OAKpBtB,EAAOsB,EAAStB,KALI,kBAMnBA,GANmB,2CAAH,sDASZ0B,EAAe,mCAAG,WAAMF,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDU,EADC,YAErBT,GAH2B,cACvBO,EADuB,OAKvBtB,EAAOsB,EAAStB,KALO,kBAMtBA,GANsB,2CAAH,sDASfD,EAAe,mCAAG,WAAMtB,GAAN,yFACN4C,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYrC,EADZ,WAErBsC,GAH2B,cACvBO,EADuB,OAKvBtB,EAAOsB,EAAStB,KALO,kBAMtBA,GANsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.js","components/pages/Movies.js","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchMovies_input__1c5BI\",\"button\":\"SearchMovies_button__tDOhz\"};","import { useState } from 'react';\nimport css from '../SearchMovies/SearchMovies.module.css';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const [queryName, setQueryName] = useState('');\n\n  const handleInput = event => {\n    setQueryName(event.currentTarget.value.toLowerCase().trim());\n  };\n  const reset = () => {\n    setQueryName('');\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(queryName);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        onChange={handleInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n\n      <button className={css.button} type=\"submit\">\n        search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchMovies;\n","import SearchMovies from 'components/SearchMovies/SearchMovies';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'services/fetchApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [queryName, setQueryName] = useState('');\n  // const movies = getMoviesByName();\n  const [searchParams] = useSearchParams();\n  const movieName = searchParams.get('title') ?? '';\n\n  // const visibleMovie = movies.filter(movie =>\n  //   movie.title.toLowerCase().includes(movieName.toLowerCase())\n  // );\n\n  // const updateQueryString = title => {\n  //   const nextParams = title !== '' ? { title } : {};\n  //   setSearchParams(nextParams);\n  // };\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const data = await getMoviesByName(queryName);\n        setMovies(data.results);\n      } catch (error) {\n        console.error('Error searching movies:', error);\n      }\n    };\n\n    searchMovies();\n  }, [queryName]);\n\n  useEffect(() => {\n    const initialSearchParams = new URLSearchParams(window.location.search);\n    const initialMovieName = initialSearchParams.get('title') || '';\n    setQueryName(initialMovieName);\n  }, []);\n\n  const onSubmit = title => {\n    // setMovies([]);\n    setQueryName(title);\n  };\n  return (\n    <>\n      <SearchMovies value={movieName} onSubmit={onSubmit} />\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n      {/* <MoviesList movies={movies} /> */}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZDhiMzA3Yjc3Nzc0MWQwN2QwZTg4NTgzMzkyMWE4NCIsInN1YiI6IjY0OTcyMmRlYjM0NDA5MDBlMjcxYWNkYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-nGnsxic-Eqjb3RquRboL6o3Q58xkv1131q1IZQJtUA',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMoviesByName = async queryName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["onSubmit","useState","queryName","setQueryName","event","preventDefault","className","css","onChange","currentTarget","value","toLowerCase","trim","type","autoComplete","autoFocus","placeholder","movies","setMovies","useSearchParams","movieName","get","useEffect","searchMovies","getMoviesByName","data","results","console","error","initialMovieName","URLSearchParams","window","location","search","title","map","movie","to","id","BASE_URL","options","method","headers","accept","Authorization","getTrending","axios","response","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}