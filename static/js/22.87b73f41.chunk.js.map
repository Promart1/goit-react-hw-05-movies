{"version":3,"file":"static/js/22.87b73f41.chunk.js","mappings":"mPAiBA,EAfmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,E,kBCaD,EAxBa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAELC,EAAAA,EAAAA,MAFK,OAElBC,EAFkB,OAGxBJ,EAAUI,EAAKC,SAHS,gDAKxBC,QAAQC,MAAM,kCAAd,MALwB,yDAAH,qDASzBL,GACD,GAAE,KAGD,4BACE,6CACA,SAAC,EAAD,CAAYb,OAAQA,MAGzB,C,+LCxBKmB,EAAW,gCACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOV,EAAW,mCAAG,sGACFW,EAAAA,EAAAA,IAAA,UAClBN,EADkB,qCAErBC,GAHuB,cACnBM,EADmB,OAKnBX,EAAOW,EAASX,KALG,kBAMlBA,GANkB,2CAAH,qDASXY,EAAe,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAA8BS,GAAWR,GADnC,cACvBM,EADuB,OAEvBX,EAAOW,EAASX,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfc,EAAY,mCAAG,WAAMD,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBN,EADkB,iBACDS,EADC,YAErBR,GAHwB,cACpBM,EADoB,OAKpBX,EAAOW,EAASX,KALI,kBAMnBA,GANmB,2CAAH,sDASZe,EAAe,mCAAG,WAAMF,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAClBN,EADkB,iBACDS,EADC,YAErBR,GAH2B,cACvBM,EADuB,OAKvBX,EAAOW,EAASX,KALO,kBAMtBA,GANsB,2CAAH,sDASfgB,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,8BACYa,EADZ,WAErBZ,GAH2B,cACvBM,EADuB,OAKvBX,EAAOW,EAASX,KALO,kBAMtBA,GANsB,2CAAH,qD","sources":["components/MoviesList/MoviesList.js","components/pages/Home.js","services/fetchApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport { getTrending } from 'services/fetchApi';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const data = await getTrending();\n        setMovies(data.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending Movies</h2>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZDhiMzA3Yjc3Nzc0MWQwN2QwZTg4NTgzMzkyMWE4NCIsInN1YiI6IjY0OTcyMmRlYjM0NDA5MDBlMjcxYWNkYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-nGnsxic-Eqjb3RquRboL6o3Q58xkv1131q1IZQJtUA',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMoviesByName = async queryName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useEffect","fetchTrendingMovies","getTrending","data","results","console","error","BASE_URL","options","method","headers","accept","Authorization","axios","response","getMovieDetails","movieId","getMovieCast","getMovieReviews","getMoviesByName","queryName"],"sourceRoot":""}