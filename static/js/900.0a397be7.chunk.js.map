{"version":3,"file":"static/js/900.0a397be7.chunk.js","mappings":"sPACA,EAA0B,sB,SCyE1B,EArEa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaJ,GAFlB,OAERK,EAFQ,OAGdN,EAASM,EAAKC,MACdC,QAAQC,IAAIH,EAAKC,MAJH,gDAMdC,QAAQE,MAAM,0BAAd,MANc,yDAAH,qDAUfN,GACD,GAAE,CAACH,IAECF,GAKH,4BACE,wBAiBoB,IAAjBA,EAAMY,QACL,yBACE,cAAGC,UAAWC,EAAd,uDAKFd,EAAMe,KAAI,SAAAP,GAAI,OACZ,0BACGA,EAAKQ,cACJ,gBACEC,IAAG,yCAAoCT,EAAKQ,cAC5CE,IAAKV,EAAKW,QAGZ,gBAAKF,IAAI,sCAAsCC,IAAI,aAErD,uBAAIV,EAAKW,QACT,uCAAeX,EAAKY,eAVbZ,EAAKa,GADF,OAgBlB,SAAC,KAAD,QA7CK,2CAgDV,C,+LCtEKC,EAAW,gCACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHuB,cACnBO,EADmB,OAKnBvB,EAAOuB,EAASvB,KALG,kBAMlBA,GANkB,2CAAH,qDASXwB,EAAe,mCAAG,WAAM7B,GAAN,yFACN2B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BpB,GAAWqB,GADnC,cACvBO,EADuB,OAEvBvB,EAAOuB,EAASvB,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfD,EAAY,mCAAG,WAAMJ,GAAN,yFACH2B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDpB,EADC,YAErBqB,GAHwB,cACpBO,EADoB,OAKpBvB,EAAOuB,EAASvB,KALI,kBAMnBA,GANmB,2CAAH,sDASZyB,EAAe,mCAAG,WAAM9B,GAAN,yFACN2B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDpB,EADC,YAErBqB,GAH2B,cACvBO,EADuB,OAKvBvB,EAAOuB,EAASvB,KALO,kBAMtBA,GANsB,2CAAH,sDASf0B,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYY,EADZ,WAErBX,GAH2B,cACvBO,EADuB,OAKvBvB,EAAOuB,EAASvB,KALO,kBAMtBA,GANsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Cast_message__X53aY\"};","import { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/fetchApi';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const data = await getMovieCast(movieId);\n        setCasts(data.cast);\n        console.log(data.cast);\n      } catch (error) {\n        console.error('Error searching actors:', error);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  if (!casts) {\n    return <p>Loading casts...</p>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {/* {casts &&\n          casts.map(cast => (\n            <li key={cast.id}>\n              {cast.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                  alt={cast.name}\n                />\n              ) : (\n                <img src=\"https://i.stack.imgur.com/l60Hf.png\" alt=\"Default\" />\n              )}\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          ))} */}\n\n        {casts.length === 0 ? (\n          <li>\n            <p className={css.message}>\n              We do not have any casts for this movie\n            </p>\n          </li>\n        ) : (\n          casts.map(cast => (\n            <li key={cast.id}>\n              {cast.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                  alt={cast.name}\n                />\n              ) : (\n                <img src=\"https://i.stack.imgur.com/l60Hf.png\" alt=\"Default\" />\n              )}\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          ))\n        )}\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZDhiMzA3Yjc3Nzc0MWQwN2QwZTg4NTgzMzkyMWE4NCIsInN1YiI6IjY0OTcyMmRlYjM0NDA5MDBlMjcxYWNkYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-nGnsxic-Eqjb3RquRboL6o3Q58xkv1131q1IZQJtUA',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMoviesByName = async queryName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["useState","casts","setCasts","movieId","useParams","useEffect","movieCast","getMovieCast","data","cast","console","log","error","length","className","css","map","profile_path","src","alt","name","character","id","BASE_URL","options","method","headers","accept","Authorization","getTrending","axios","response","getMovieDetails","getMovieReviews","getMoviesByName","queryName"],"sourceRoot":""}